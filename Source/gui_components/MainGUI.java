/*
 *
 */
package gui_components;

import data_structures.EmptyCollectionException;
import hospital_components.Bed;
import hospital_components.CareFacility;
import hospital_components.CasualEmployee;
import hospital_components.Patient;
import java.awt.CardLayout;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author John Verwolf
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewApplication
     */
    public MainGUI() {
        savePath = null;

        //bedCard components
        bedListAvailableIndexSelected = -1;
        bedListUnavailableIndexSelected = -1;

        //patientCard components
        patientIndexSelected = -1;

        //employeeCard components
        cEIndexSelected = -1;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        start = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startLoad = new javax.swing.JButton();
        startNew = new javax.swing.JButton();
        cardBeds = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        bedAvailable = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        bedLocation = new javax.swing.JTextField();
        bedNameAdd = new javax.swing.JTextField();
        bedNew = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        panelModify = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        bedAvailable2 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        bedLocation2 = new javax.swing.JTextField();
        bedNameAdd2 = new javax.swing.JTextField();
        bedEdit = new javax.swing.JButton();
        bedDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        bedUnavailable2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        bedListA = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bedListU = new javax.swing.JList();
        cardPatients = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        panelModify3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        patientEdit = new javax.swing.JButton();
        patientDelete = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        patientNameAdd2 = new javax.swing.JTextField();
        patientPriority2 = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        PatientNameAdd1 = new javax.swing.JTextField();
        patientNew = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        patientPriority1 = new javax.swing.JSpinner();
        cardEmployees = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cEList = new javax.swing.JList<>();
        jPanel10 = new javax.swing.JPanel();
        casualNew = new javax.swing.JButton();
        casualEdit = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        casualName1 = new javax.swing.JTextField();
        casualAvailable = new javax.swing.JCheckBox();
        casualPay1 = new javax.swing.JSpinner();
        casualDelete = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cardReport = new javax.swing.JPanel();
        reportScrollArea = new javax.swing.JScrollPane();
        reportDisplay = new javax.swing.JTextArea();
        reportUpdate = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        editPatients = new javax.swing.JMenuItem();
        editBeds = new javax.swing.JMenuItem();
        editEmployees = new javax.swing.JMenuItem();
        reportsMenu = new javax.swing.JMenu();
        viewReport = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Hospital Management Utility File Chooser");
        fileChooser.setFileFilter(new MyCustomFilter());
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel1.setText("Hospital Management Utility");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setText("version 1.0");

        startLoad.setText("Load");
        startLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startLoadActionPerformed(evt);
            }
        });

        startNew.setText("New");
        startNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startLayout = new javax.swing.GroupLayout(start);
        start.setLayout(startLayout);
        startLayout.setHorizontalGroup(
            startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startLoad)
                .addGap(49, 49, 49)
                .addComponent(startNew)
                .addGap(156, 156, 156))
            .addGroup(startLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        startLayout.setVerticalGroup(
            startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addGroup(startLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startNew)
                    .addComponent(startLoad))
                .addGap(51, 51, 51))
        );

        mainPanel.add(start, "start");

        jLabel5.setText("Location:");

        bedAvailable.setSelected(true);
        bedAvailable.setText("Working Order");
        bedAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedAvailableActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        bedLocation.setText("Floor 1");

        bedNameAdd.setText("Bed1");
        bedNameAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedNameAddActionPerformed(evt);
            }
        });

        bedNew.setText("New");
        bedNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedNewActionPerformed(evt);
            }
        });

        jLabel3.setText("To add a bed, fill in the forms and press New");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bedNew)
                                .addGap(154, 154, 154))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bedNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bedLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(bedAvailable)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bedNew)
                .addGap(25, 25, 25))
        );

        jLabel6.setText("Location:");

        bedAvailable2.setSelected(true);
        bedAvailable2.setText("Working");
        bedAvailable2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedAvailable2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Name:");

        bedLocation2.setText("Floor 1");

        bedNameAdd2.setText("Bed 1");
        bedNameAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedNameAdd2ActionPerformed(evt);
            }
        });

        bedEdit.setText("Edit");
        bedEdit.setEnabled(false);
        bedEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedEditActionPerformed(evt);
            }
        });

        bedDelete.setText("Delete");
        bedDelete.setEnabled(false);
        bedDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedDeleteActionPerformed(evt);
            }
        });

        jLabel8.setText("To modify a bed, select it from the list and press edit");

        bedUnavailable2.setText("Broken");
        bedUnavailable2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedUnavailable2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelModifyLayout = new javax.swing.GroupLayout(panelModify);
        panelModify.setLayout(panelModifyLayout);
        panelModifyLayout.setHorizontalGroup(
            panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelModifyLayout.createSequentialGroup()
                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelModifyLayout.createSequentialGroup()
                        .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelModifyLayout.createSequentialGroup()
                                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bedNameAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelModifyLayout.createSequentialGroup()
                                        .addComponent(bedLocation2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bedDelete))))
                            .addComponent(bedEdit))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelModifyLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bedUnavailable2)
                            .addComponent(bedAvailable2))))
                .addContainerGap())
        );
        panelModifyLayout.setVerticalGroup(
            panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelModifyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(bedAvailable2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedNameAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedLocation2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bedUnavailable2))
                .addGap(18, 18, 18)
                .addGroup(panelModifyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedEdit)
                    .addComponent(bedDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bedListA.setModel(new javax.swing.DefaultListModel());
        bedListA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bedListAMouseClicked(evt);
            }
        });
        bedListA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bedListAFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(bedListA);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel9.setText("Available:");

        jLabel10.setText("Unavailable:");

        bedListU.setModel(new javax.swing.DefaultListModel());
        bedListU.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bedListUMouseClicked(evt);
            }
        });
        bedListU.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bedListUFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(bedListU);

        javax.swing.GroupLayout cardBedsLayout = new javax.swing.GroupLayout(cardBeds);
        cardBeds.setLayout(cardBedsLayout);
        cardBedsLayout.setHorizontalGroup(
            cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardBedsLayout.createSequentialGroup()
                .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardBedsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(cardBedsLayout.createSequentialGroup()
                        .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(cardBedsLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cardBedsLayout.setVerticalGroup(
            cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardBedsLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardBedsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(panelModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        mainPanel.add(cardBeds, "cardBeds");

        patientList.setModel(new javax.swing.DefaultListModel());
        patientList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(patientList);

        jLabel17.setText("Priority:");

        jLabel18.setText("Name:");

        patientEdit.setText("Edit");
        patientEdit.setEnabled(false);
        patientEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientEditActionPerformed(evt);
            }
        });

        patientDelete.setText("Delete");
        patientDelete.setEnabled(false);
        patientDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientDeleteActionPerformed(evt);
            }
        });

        jLabel19.setText("To modify a patient, select it from the list and press edit");

        patientNameAdd2.setText("Name");
        patientNameAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNameAdd2ActionPerformed(evt);
            }
        });

        patientPriority2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        javax.swing.GroupLayout panelModify3Layout = new javax.swing.GroupLayout(panelModify3);
        panelModify3.setLayout(panelModify3Layout);
        panelModify3Layout.setHorizontalGroup(
            panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelModify3Layout.createSequentialGroup()
                .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelModify3Layout.createSequentialGroup()
                        .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelModify3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelModify3Layout.createSequentialGroup()
                                        .addGap(176, 176, 176)
                                        .addComponent(patientDelete))
                                    .addGroup(panelModify3Layout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(patientEdit)
                            .addGroup(panelModify3Layout.createSequentialGroup()
                                .addComponent(patientNameAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(patientPriority2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelModify3Layout.setVerticalGroup(
            panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelModify3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientNameAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientPriority2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelModify3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientEdit)
                    .addComponent(patientDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel20.setText("Priority from 0  (low) to 10( high):");

        jLabel21.setText("Name:");

        PatientNameAdd1.setText("Name");
        PatientNameAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientNameAdd1ActionPerformed(evt);
            }
        });

        patientNew.setText("New");
        patientNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNewActionPerformed(evt);
            }
        });

        jLabel22.setText("To admit a new patient, fill in the forms and press new");

        patientPriority1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(patientNew)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PatientNameAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(patientPriority1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel20))))
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientNameAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientPriority1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(patientNew)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelModify3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(panelModify3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cardPatientsLayout = new javax.swing.GroupLayout(cardPatients);
        cardPatients.setLayout(cardPatientsLayout);
        cardPatientsLayout.setHorizontalGroup(
            cardPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPatientsLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        cardPatientsLayout.setVerticalGroup(
            cardPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
            .addGroup(cardPatientsLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.add(cardPatients, "cardPatients");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 375, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Full Time", jPanel4);

        cEList.setModel(new javax.swing.DefaultListModel());
        cEList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cEListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(cEList);

        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        casualNew.setText("New");
        casualNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualNewActionPerformed(evt);
            }
        });
        jPanel10.add(casualNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        casualEdit.setText("Edit");
        casualEdit.setEnabled(false);
        casualEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualEditActionPerformed(evt);
            }
        });
        jPanel10.add(casualEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jCheckBox1.setText("modify");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel10.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 67, -1));

        casualName1.setText("Name");
        casualName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualName1ActionPerformed(evt);
            }
        });
        jPanel10.add(casualName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 95, -1));

        casualAvailable.setSelected(true);
        casualAvailable.setText("available");
        jPanel10.add(casualAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 87, -1));

        casualPay1.setModel(new javax.swing.SpinnerNumberModel(25.0d, 10.25d, 100.0d, 0.1d));
        jPanel10.add(casualPay1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 94, -1));

        casualDelete.setText("Delete");
        casualDelete.setEnabled(false);
        casualDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casualDeleteActionPerformed(evt);
            }
        });
        jPanel10.add(casualDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(" \n To admit a new patient, fill in the forms and press new.\n\n\n\n To edit a patien, first check Modify, then select patient\n from the list. Fill in the forms and press edit.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jTextArea1.setFocusable(false);
        jScrollPane5.setViewportView(jTextArea1);

        jPanel10.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 6, 280, 120));

        jLabel11.setText("Name:");
        jPanel10.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel12.setText("Hourly Rate:");
        jPanel10.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Casual Employees", jPanel5);

        javax.swing.GroupLayout cardEmployeesLayout = new javax.swing.GroupLayout(cardEmployees);
        cardEmployees.setLayout(cardEmployeesLayout);
        cardEmployeesLayout.setHorizontalGroup(
            cardEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        cardEmployeesLayout.setVerticalGroup(
            cardEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        mainPanel.add(cardEmployees, "cardEmployees");

        cardReport.setFocusable(false);

        reportDisplay.setColumns(20);
        reportDisplay.setRows(5);
        reportScrollArea.setViewportView(reportDisplay);

        reportUpdate.setText("Update");
        reportUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardReportLayout = new javax.swing.GroupLayout(cardReport);
        cardReport.setLayout(cardReportLayout);
        cardReportLayout.setHorizontalGroup(
            cardReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reportScrollArea, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
            .addGroup(cardReportLayout.createSequentialGroup()
                .addComponent(reportUpdate)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        cardReportLayout.setVerticalGroup(
            cardReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardReportLayout.createSequentialGroup()
                .addComponent(reportScrollArea, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportUpdate))
        );

        mainPanel.add(cardReport, "cardReport");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");
        editMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuActionPerformed(evt);
            }
        });

        editPatients.setText("Patients");
        editPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatientsActionPerformed(evt);
            }
        });
        editMenu.add(editPatients);

        editBeds.setText("Beds");
        editBeds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBedsActionPerformed(evt);
            }
        });
        editMenu.add(editBeds);

        editEmployees.setText("Employees");
        editEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmployeesActionPerformed(evt);
            }
        });
        editMenu.add(editEmployees);

        menuBar.add(editMenu);

        reportsMenu.setText("Reports");

        viewReport.setText("Reports");
        viewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReportActionPerformed(evt);
            }
        });
        reportsMenu.add(viewReport);

        menuBar.add(reportsMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void startLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startLoadActionPerformed
        fileOpenDialog(evt);
    }//GEN-LAST:event_startLoadActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        fileOpenDialog(evt);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void editMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editMenuActionPerformed

    private void viewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReportActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "cardReport");
    }//GEN-LAST:event_viewReportActionPerformed

    private void editEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEmployeesActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "cardEmployees");
    }//GEN-LAST:event_editEmployeesActionPerformed

    private void editBedsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBedsActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "cardBeds");
    }//GEN-LAST:event_editBedsActionPerformed

    private void editPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatientsActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();
        card.show(mainPanel, "cardPatients");
    }//GEN-LAST:event_editPatientsActionPerformed

    private void startNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startNewActionPerformed
        CardLayout card = (CardLayout) mainPanel.getLayout();

        //instantiate care facility
        try {
            String name = JOptionPane.showInputDialog("Please enter a name for the carefacility", "CareFacility");
            while (name.equals("")) {
                name = JOptionPane.showInputDialog("Please enter a name for the carefacility", "CareFacility");
            }
            if (!name.equals("")) {
                cF = new CareFacility(name);
                card.show(mainPanel, "cardReport");
            }
        } catch (NullPointerException e) {
        }
    }//GEN-LAST:event_startNewActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        if (savePath == null) {
            fileSaveDialog(evt);
        } else {
            cF.Save(savePath);
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void reportUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportUpdateActionPerformed

    }//GEN-LAST:event_reportUpdateActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        fileSaveDialog(evt);
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void bedListAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bedListAMouseClicked
        bedListASelect();
    }//GEN-LAST:event_bedListAMouseClicked

    private void bedDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bedDeleteActionPerformed

    private void bedEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedEditActionPerformed
        FunctionalityUtils.modifyBeds(cF, bedListAvailableIndexSelected, bedListUnavailableIndexSelected, bedNameAdd2, bedLocation2, bedAvailable2);
        updateDisplays();
        bedListUnavailableIndexSelected = -1; //reset to unselected after modification
        bedListAvailableIndexSelected = -1; //reset to unselected after modification
    }//GEN-LAST:event_bedEditActionPerformed

    private void bedNameAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedNameAdd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bedNameAdd2ActionPerformed

    /**
     * adds a bed to the care facility
     *
     * @param evt action event
     */
    private void bedNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedNewActionPerformed
        String name = bedNameAdd.getText();
        String location = bedLocation.getText();
        Boolean available = bedAvailable.isSelected();
        Bed bed = new Bed(name, location, available, null);
        cF.addBed(bed);
        updateDisplays();
    }//GEN-LAST:event_bedNewActionPerformed

    private void bedNameAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedNameAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bedNameAddActionPerformed

    private void bedListUMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bedListUMouseClicked
        bedListUSelect();
    }//GEN-LAST:event_bedListUMouseClicked

    private void bedAvailable2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedAvailable2ActionPerformed
        if (bedAvailable2.isSelected()) {
            bedUnavailable2.setSelected(false);
        } else {
            bedUnavailable2.setSelected(true);
        }
    }//GEN-LAST:event_bedAvailable2ActionPerformed

    private void bedUnavailable2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedUnavailable2ActionPerformed
        if (bedUnavailable2.isSelected()) {
            bedAvailable2.setSelected(false);
        } else {
            bedAvailable2.setSelected(true);
        }
    }//GEN-LAST:event_bedUnavailable2ActionPerformed

    private void bedListAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bedListAFocusGained
        bedListASelect();
    }//GEN-LAST:event_bedListAFocusGained

    private void bedListUFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bedListUFocusGained
        bedListUSelect();
    }//GEN-LAST:event_bedListUFocusGained

    private void patientEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientEditActionPerformed
        FunctionalityUtils.modifyPatients(cF, patientIndexSelected, patientNameAdd2, patientPriority2);
        updateDisplays();
        patientIndexSelected = -1;
    }//GEN-LAST:event_patientEditActionPerformed

    private void patientDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientDeleteActionPerformed

    private void PatientNameAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientNameAdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientNameAdd1ActionPerformed

    private void patientNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNewActionPerformed
        String name = PatientNameAdd1.getText();
        int priority = (int) patientPriority1.getValue();
        Patient patient = new Patient(name, priority);
        cF.addPatient(patient);
        updateDisplays();
    }//GEN-LAST:event_patientNewActionPerformed


    private void patientNameAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNameAdd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientNameAdd2ActionPerformed

    private void patientListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientListMouseClicked
        if (!isChanging && !patientList.isSelectionEmpty()) {
            isChanging = true; //flag to prevent listener conflicts 
            patientIndexSelected = patientList.getSelectedIndex() + 1; //value of number selected from jList
            patientDelete.setEnabled(true);
            patientEdit.setEnabled(true);
            //patientList.clearSelection(); //undo selection

            //Fill forms with data from selected patient
            try {
                Patient temp = cF.getCopyPatientStack().get(patientIndexSelected); //get a reference to the patient selected
                patientNameAdd2.setText(temp.getName()); //set name text                
                patientPriority2.setValue(temp.getPriority()); //set location priority                  
                isChanging = false; //flag to prevent listener conflicts
            } catch (EmptyCollectionException e) {
                isChanging = false; //flag to prevent listener conflicts
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_patientListMouseClicked

    private void bedAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bedAvailableActionPerformed

    private void cEListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cEListMouseClicked
        if (!isChanging && !cEList.isSelectionEmpty()) {
            isChanging = true; //flag to prevent listener conflicts
            cEIndexSelected = cEList.getSelectedIndex() + 1; //
            //            casualDelete.setEnabled(true);
            //            casualEdit.setEnabled(true);

            //Fill forms with data from selected bed
            try {
                CasualEmployee temp = cF.getCasualEmployee(cEIndexSelected);
                casualName1.setText(temp.getName()); //set name text
                casualPay1.setValue(temp.getPayRate()); //set location priority
                casualAvailable.setSelected(temp.getAvailability());
                isChanging = false; //flag to prevent listener conflicts
            } catch (EmptyCollectionException e) {
                isChanging = false; //flag to prevent listener conflicts
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cEListMouseClicked

    private void casualName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_casualName1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            casualEdit.setEnabled(true);
            casualDelete.setEnabled(true);
            casualNew.setEnabled(false);

        } else {
            casualEdit.setEnabled(false);
            casualDelete.setEnabled(false);
            casualNew.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void casualEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualEditActionPerformed
        FunctionalityUtils.modifyCasualEmployees(cF, cEIndexSelected, casualName1, casualPay1, casualAvailable);
        
        updateDisplays();
        cEIndexSelected = -1;
    }//GEN-LAST:event_casualEditActionPerformed

    private void casualNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualNewActionPerformed
        String name = casualName1.getText();
        double pay = (double) casualPay1.getValue();
        Boolean available = casualAvailable.isSelected();
        CasualEmployee cE = new CasualEmployee(name, available, pay);
        cF.addCasualEmployee(cE);
        updateDisplays();
    }//GEN-LAST:event_casualNewActionPerformed

    private void casualDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casualDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_casualDeleteActionPerformed

    private void updateDisplays() {
        FunctionalityUtils.updateBedDisplay(cF, bedListA, bedListU);
        FunctionalityUtils.updatePatientDisplay(cF, patientList);
        FunctionalityUtils.updateCasualDisplay(cF, cEList);
        FunctionalityUtils.updateReport(cF, reportDisplay);
    }

    private void bedListASelect() {
        if (!isChanging && !bedListA.isSelectionEmpty()) {
            isChanging = true; //flag to prevent listener conflicts
            bedListAvailableIndexSelected = bedListA.getSelectedIndex() + 1; //            
            bedDelete.setEnabled(true);
            bedEdit.setEnabled(true);
            bedListU.clearSelection(); //undo selection

            //Fill forms with data from selected bed            
            try {
                Bed temp = cF.getAvailableBed(bedListAvailableIndexSelected);
                bedNameAdd2.setText(temp.getName()); //set name text
                bedLocation2.setText(temp.getLocation()); //set location text                
                bedAvailable2.setSelected(temp.getInWorkingOrder());
                bedUnavailable2.setSelected(!temp.getInWorkingOrder());
                isChanging = false; //flag to prevent listener conflicts
            } catch (EmptyCollectionException e) {
                isChanging = false; //flag to prevent listener conflicts
                System.out.println(e);
            }
            bedListUnavailableIndexSelected = -1;
        }
    }

    private void bedListUSelect() {
        if (!isChanging && !bedListU.isSelectionEmpty()) {
            isChanging = true; //flag to prevent listener conflicts
            bedListUnavailableIndexSelected = bedListU.getSelectedIndex() + 1; //            
            bedDelete.setEnabled(true);
            bedEdit.setEnabled(true);
            bedListA.clearSelection(); //undo selection

            //Fill forms with data from selected bed            
            try {
                Bed temp = cF.getUnavailableBed(bedListUnavailableIndexSelected);
                bedNameAdd2.setText(temp.getName()); //set name text
                bedLocation2.setText(temp.getLocation()); //set location text                
                bedAvailable2.setSelected(temp.getInWorkingOrder());
                bedUnavailable2.setSelected(!temp.getInWorkingOrder());
                isChanging = false; //flag to prevent listener conflicts
            } catch (EmptyCollectionException e) {
                isChanging = false; //flag to prevent listener conflicts
                System.out.println(e);
            }
            bedListAvailableIndexSelected = -1;
        }
    }

    /**
     * opens an file open dialog to open the specified file
     *
     * @param evt ActionEvent
     */
    private void fileOpenDialog(java.awt.event.ActionEvent evt) {
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //get the file name
            String filename = fileChooser.getSelectedFile().toString();

            //ensure the file type is correct
            if (!filename.endsWith(".cf")) {
                File openFile = new File(filename);
                cF = CareFacility.load(openFile);

                //set card to cardReport
                CardLayout card = (CardLayout) mainPanel.getLayout();
                card.show(mainPanel, "cardReport");
            }
        }
    }

    /**
     * opens a save dialog and saves the file to the specified location
     *
     * @param evt ActionEvent
     */
    private void fileSaveDialog(java.awt.event.ActionEvent evt) {
        File setDir = new File(".");                        //sets setDir to default file path
        fileChooser.setCurrentDirectory(setDir);            //set fileChooser to open at default file path

        int returnVal = fileChooser.showSaveDialog(this);   //get the return value of a save Dialog box

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //get the file name
            File tempPath = fileChooser.getSelectedFile();  //get file path from filechooser
            String filename = tempPath.toString();

            if (!filename.isEmpty() && !filename.startsWith(".")) { //sanitize imput
                if (!filename.endsWith(".cf")) {            //ensure the file type is correct
                    filename += ".cf";
                }
                //save CareFacility object to filepath specified by user
                File saveFile = new File(filename);
                cF.Save(saveFile);

                savePath = tempPath;                        //set default savePath to the file path from filechooser
            }
        }
    }

    /**
     * Internal class that filters what files can be chosen by the jFileChooser
     */
    class MyCustomFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".cf" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".cf");
        }

        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,            
            return "Care Facility File (*.cf)";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    //Holds the filepath for the save feature
    private File savePath;

    private CareFacility cF;

    //for bedCard
    private int bedListAvailableIndexSelected; //To distinguish which jlist selected
    private int bedListUnavailableIndexSelected; //To distinguish which jlist selected

    //for patientCard
    private int patientIndexSelected;

    //for emloyeeCard
    private int cEIndexSelected;

    //flag to prevent listener conflics    
    boolean isChanging = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PatientNameAdd1;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JCheckBox bedAvailable;
    private javax.swing.JCheckBox bedAvailable2;
    private javax.swing.JButton bedDelete;
    private javax.swing.JButton bedEdit;
    private javax.swing.JList bedListA;
    private javax.swing.JList bedListU;
    private javax.swing.JTextField bedLocation;
    private javax.swing.JTextField bedLocation2;
    private javax.swing.JTextField bedNameAdd;
    private javax.swing.JTextField bedNameAdd2;
    private javax.swing.JButton bedNew;
    private javax.swing.JCheckBox bedUnavailable2;
    private javax.swing.JList<String> cEList;
    private javax.swing.JPanel cardBeds;
    private javax.swing.JPanel cardEmployees;
    private javax.swing.JPanel cardPatients;
    private javax.swing.JPanel cardReport;
    private javax.swing.JCheckBox casualAvailable;
    private javax.swing.JButton casualDelete;
    private javax.swing.JButton casualEdit;
    private javax.swing.JTextField casualName1;
    private javax.swing.JButton casualNew;
    private javax.swing.JSpinner casualPay1;
    private javax.swing.JMenuItem editBeds;
    private javax.swing.JMenuItem editEmployees;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editPatients;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel panelModify;
    private javax.swing.JPanel panelModify3;
    private javax.swing.JButton patientDelete;
    private javax.swing.JButton patientEdit;
    private javax.swing.JList patientList;
    private javax.swing.JTextField patientNameAdd2;
    private javax.swing.JButton patientNew;
    private javax.swing.JSpinner patientPriority1;
    private javax.swing.JSpinner patientPriority2;
    private javax.swing.JTextArea reportDisplay;
    private javax.swing.JScrollPane reportScrollArea;
    private javax.swing.JButton reportUpdate;
    private javax.swing.JMenu reportsMenu;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPanel start;
    private javax.swing.JButton startLoad;
    private javax.swing.JButton startNew;
    private javax.swing.JMenuItem viewReport;
    // End of variables declaration//GEN-END:variables

}
